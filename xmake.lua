set_project("rtype")
set_languages("c++17")

add_requires("libsdl", {configs = {shared = false}})
add_requires("libsdl_image", {configs = {shared = false}})
add_requires("yaml-cpp", {configs = {shared = false}})
add_requires("boost", {configs = {asio = true}})

local ENGINE_SRC_DIR = path.join(os.projectdir(), "engine")
local SERVER_SRC_DIR = path.join(os.projectdir(), "server")
local CLIENT_SRC_DIR = path.join(os.projectdir(), "client")
local ENGINE_INCLUDE_DIR = path.join("", "include")
local SERVER_INCLUDE_DIR = path.join(SERVER_SRC_DIR, "include")
local CLIENT_INCLUDE_DIR = path.join("", "include")

target("engine-graphic")
    set_kind("static")
    add_includedirs(ENGINE_INCLUDE_DIR)
    add_files(path.join(ENGINE_SRC_DIR, "graphic/wrapper/*.cpp"))
    add_packages("libsdl", "libsdl_image")

target("engine-core")
    set_kind("static")
    add_includedirs(ENGINE_INCLUDE_DIR)
    add_files(path.join(ENGINE_SRC_DIR, "core/*.cpp"))
    add_packages("yaml-cpp")

target("server-executable")
    set_kind("binary")
    add_includedirs(SERVER_INCLUDE_DIR, ENGINE_INCLUDE_DIR)
    add_files(path.join(SERVER_SRC_DIR, "src/*.cpp"))
    add_defines("ASIO_STANDALONE")
    add_packages("asio", "boost")
    add_deps("engine-core")
    add_syslinks("pthread")

target("client-executable")
    set_kind("binary")
    add_includedirs(CLIENT_INCLUDE_DIR, ENGINE_INCLUDE_DIR)
    add_files(path.join(CLIENT_SRC_DIR, "main.cpp"))
    add_deps("engine-core", "engine-graphic")
    add_packages("libsdl", "libsdl_image")
    add_syslinks("pthread") 

